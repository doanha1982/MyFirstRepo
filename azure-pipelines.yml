# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/MyLib/MyLib.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/MyConsoleAppInGitHub/MyConsoleAppInGitHub.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/MyMSTestConsoleApp/MyMSTestConsoleApp.csproj'
    testRunTitle: 'Testing'
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/MyConsoleAppInGitHub/MyConsoleAppInGitHub.csproj'
    arguments: '-c $(BuildConfiguration) -o $(Build.StagingDirectory)/ci-build --no-build'
    zipAfterPublish: true
    workingDirectory: '**/MyConsoleAppInGitHub'
    # The -c command will tell Azure DevOps to use the buildConfiguration variable. 
    # By default the variable is set to release but you can change it in "Variables" tab on this page
    # The -o argument specifies the location of the published output.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.StagingDirectory)/ci-build'
    archiveFile: '$(Build.ArtifactStagingDirectory)/hadoan.myfirstrepo.$(Build.BuildId).zip'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/hadoan.myfirstrepo.$(Build.BuildId).zip'
    ArtifactName: 'hadoan.myfirstrepo.$(Build.BuildId).zip'